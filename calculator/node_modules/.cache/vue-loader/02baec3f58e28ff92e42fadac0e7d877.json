{"remainingRequest":"/Users/neil/project/The-F2E/calculator/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/neil/project/The-F2E/calculator/src/components/Calculator.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/neil/project/The-F2E/calculator/src/components/Calculator.vue","mtime":1564329550224},{"path":"/Users/neil/project/The-F2E/calculator/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/neil/project/The-F2E/calculator/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/neil/project/The-F2E/calculator/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/neil/project/The-F2E/calculator/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  data() {\n    return {\n      mode: true,\n      screen: '請輸入...',\n      number: '0',\n      hasResult: false,\n    }\n  },\n  methods: {\n    input(digital) {\n      this.mode = true;\n      // if (digital === '00') {\n      //   if (this.number === '0') {\n      //     this.number = '0';\n      //   } else {\n      //     this.number = digital;\n      //   }\n      // }\n      if (this.hasResult) {\n        this.screen = '0';\n        if (digital === '00') {\n          this.number = '0';\n        } else {\n          this.number = digital;\n        }\n      } else {\n        if (this.number === '0') {\n          if (digital === '00') {\n            this.number = '0';\n          } else {\n            this.number = digital;\n          }\n        } else {\n          this.number = this.number + digital;\n        }\n      }\n      this.hasResult = false;\n    },\n    dot() {\n      if (!this.mode) {\n        return;\n      } else {\n        if (this.number.indexOf('.') < 0) {\n          this.number = this.number + '.';\n        } else {\n          return;\n        }\n      }\n      this.mode = false;\n    },\n    operation(operate) {\n      if (!this.mode) {\n        return;\n      } else {\n        if (this.screen === '請輸入...' || this.screen === '0') {\n          this.screen = `${this.number + operate}`;\n        } else {\n          this.screen = `${this.screen + this.number + operate}`;\n        }\n      }\n      this.number = '0';\n      this.mode = false;\n    },\n    clear() {\n      this.mode = true;\n      this.screen = '請輸入...';\n      this.number = '0';\n      this.hasResult = false;\n    },\n    back() {\n      if (this.number === '0') {\n        return;\n      } else {\n        this.number = this.number.substring(0, this.number.length - 1);\n      }\n    },\n    equal() {\n      if (this.mode) {\n        this.screen = `${this.screen + this.number}`;\n        this.number = eval(this.formula);\n        this.mode = false;\n        this.hasResult = true;\n      } else {\n        return;\n      }\n    },\n  },\n  computed: {\n    formula() {\n      const temp = this.screen.replace(/×/g, '*');\n      return temp.replace(/÷/g, '/');\n    },\n  },\n};\n",{"version":3,"sources":["Calculator.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Calculator.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"calculator\">\n        <div class=\"calculator__screen\">\n          <div class=\"calculator__screen__detail\">\n            <p>{{ screen }}</p>\n          </div>\n          <div class=\"calculator__screen__result\">\n            <p>{{ number }}</p>\n          </div>\n        </div>\n        <div class=\"calculator__keyboard\">\n          <button class=\"calculator__keyboard__button\" @click=\"input('7')\">7</button>\n          <button class=\"calculator__keyboard__button\" @click=\"input('8')\">8</button>\n          <button class=\"calculator__keyboard__button\" @click=\"input('9')\">9</button>\n          <button class=\"calculator__keyboard__button calculator__keyboard__button__operator\" @click=\"operation('÷')\">÷</button>\n          <button class=\"calculator__keyboard__button\" @click=\"input('4')\">4</button>\n          <button class=\"calculator__keyboard__button\" @click=\"input('5')\">5</button>\n          <button class=\"calculator__keyboard__button\" @click=\"input('6')\">6</button>\n          <button class=\"calculator__keyboard__button calculator__keyboard__button__operator\" @click=\"operation('×')\">×</button>\n          <button class=\"calculator__keyboard__button\" @click=\"input('1')\">1</button>\n          <button class=\"calculator__keyboard__button\" @click=\"input('2')\">2</button>\n          <button class=\"calculator__keyboard__button\" @click=\"input('3')\">3</button>\n          <button class=\"calculator__keyboard__button calculator__keyboard__button__operator\" @click=\"operation('+')\">+</button>\n          <button class=\"calculator__keyboard__button\" @click=\"input('0')\">0</button>\n          <button class=\"calculator__keyboard__button\" @click=\"input('00')\">00</button>\n          <button class=\"calculator__keyboard__button\" @click=\"dot\">.</button>\n          <button class=\"calculator__keyboard__button calculator__keyboard__button__operator\" @click=\"operation('-')\">−</button>\n          <button class=\"calculator__keyboard__button calculator__keyboard__button__features\" @click=\"clear\">AC</button>\n          <button class=\"calculator__keyboard__button calculator__keyboard__button__features\" @click=\"back\">⌫</button>\n          <button class=\"calculator__keyboard__button calculator__keyboard__button__result\" @click=\"equal\">=</button>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      mode: true,\n      screen: '請輸入...',\n      number: '0',\n      hasResult: false,\n    }\n  },\n  methods: {\n    input(digital) {\n      this.mode = true;\n      // if (digital === '00') {\n      //   if (this.number === '0') {\n      //     this.number = '0';\n      //   } else {\n      //     this.number = digital;\n      //   }\n      // }\n      if (this.hasResult) {\n        this.screen = '0';\n        if (digital === '00') {\n          this.number = '0';\n        } else {\n          this.number = digital;\n        }\n      } else {\n        if (this.number === '0') {\n          if (digital === '00') {\n            this.number = '0';\n          } else {\n            this.number = digital;\n          }\n        } else {\n          this.number = this.number + digital;\n        }\n      }\n      this.hasResult = false;\n    },\n    dot() {\n      if (!this.mode) {\n        return;\n      } else {\n        if (this.number.indexOf('.') < 0) {\n          this.number = this.number + '.';\n        } else {\n          return;\n        }\n      }\n      this.mode = false;\n    },\n    operation(operate) {\n      if (!this.mode) {\n        return;\n      } else {\n        if (this.screen === '請輸入...' || this.screen === '0') {\n          this.screen = `${this.number + operate}`;\n        } else {\n          this.screen = `${this.screen + this.number + operate}`;\n        }\n      }\n      this.number = '0';\n      this.mode = false;\n    },\n    clear() {\n      this.mode = true;\n      this.screen = '請輸入...';\n      this.number = '0';\n      this.hasResult = false;\n    },\n    back() {\n      if (this.number === '0') {\n        return;\n      } else {\n        this.number = this.number.substring(0, this.number.length - 1);\n      }\n    },\n    equal() {\n      if (this.mode) {\n        this.screen = `${this.screen + this.number}`;\n        this.number = eval(this.formula);\n        this.mode = false;\n        this.hasResult = true;\n      } else {\n        return;\n      }\n    },\n  },\n  computed: {\n    formula() {\n      const temp = this.screen.replace(/×/g, '*');\n      return temp.replace(/÷/g, '/');\n    },\n  },\n};\n</script>\n"]}]}